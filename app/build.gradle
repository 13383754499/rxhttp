plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp' version libs.versions.ksp
}

android {
    
    namespace 'com.example.httpsender'

    compileSdk 35
    defaultConfig {
        applicationId "com.example.rxhttp"
        minSdk 21
        targetSdk 35
        versionCode 1
        versionName "1.0"

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        buildConfig = true
        dataBinding = true
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
    }
}

ksp {
    arg("rxhttp_rxjava", libs.versions.rxjava.get())
//        arg("rxhttp_package", "rxhttp")
}

kapt {
    arguments {
        arg("rxhttp_rxjava", libs.versions.rxjava.get()) //可传入rxjava2、rxjava3或具体版本号，如 3.1.1
//            arg("rxhttp_package", "rxhttp") //设置RxHttp相关类的包名，多module依赖时，需要配置不同的包名
    }
}


dependencies {
    implementation libs.androidx.multidex
    implementation libs.androidx.appcompat
    implementation libs.androidx.recyclerview
    implementation libs.androidx.constraintlayout
    implementation libs.github.magicindicator
    implementation libs.androidx.fragment.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.lifecycle.service

    implementation projects.rxhttp
    ksp projects.rxhttpCompiler
//    kapt projects.rxhttpCompiler

    implementation libs.okhttp
    testImplementation libs.mockwebserver

//    implementation libs.rxhttp
//    ksp libs.rxhttp.compiler
//    kapt libs.rxhttp.compiler

    //管理RxJava及生命周期，Activity/Fragment 销毁，自动关闭未完成的请求
    implementation libs.github.rxlife.rxjava3
    implementation libs.rxandroid
    implementation libs.rxjava

//    implementation libs.rxhttp.converter.serialization
//    implementation libs.rxhttp.converter.fastjson
//    implementation libs.rxhttp.converter.jackson
//    implementation libs.rxhttp.converter.moshi
//    implementation libs.rxhttp.converter.protobuf
//    implementation libs.rxhttp.converter.simplexml

    implementation projects.rxhttpConverter.converterSerialization
    implementation projects.rxhttpConverter.converterFastjson
    implementation projects.rxhttpConverter.converterSimplexml
    implementation projects.rxhttpConverter.converterProtobuf
    implementation projects.rxhttpConverter.converterMoshi
    implementation projects.rxhttpConverter.converterJackson

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    implementation libs.utilcodex

    testImplementation libs.kotlin.compile.testing.ksp
    testImplementation libs.kotlinpoet
    testImplementation libs.kotlinpoet.ksp
    testImplementation projects.rxhttpCompiler
}
